name: runcommands
on:
  workflow_dispatch:
    inputs:
      run-commands:
        description: runcommands
        required: true
        default: 'carmacloudcomands'
        type: string    
jobs:
  deploy:
    name: Push to EC2 Instance
    runs-on: ubuntu-latest
    container:
      image: cimg/openjdk:17.0.2
    steps:
      - name: Checkout the code
        uses: actions/checkout@v1
      - name: Connect to ece2
        run: |
          ls -la && pwd         
          cd ./tf-example && chmod 600 myJune222Key.pem && ssh -i "myJune222Key.pem" ubuntu@ec2-3-142-74-92.us-east-2.compute.amazonaws.com
      #- name: Deploy to my EC2 instance
        #uses: easingthemes/ssh-deploy@v2.1.5
        #env:
          #SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          #SOURCE: "./"
          #REMOTE_HOST: "ec2-3-142-74-92.us-east-2.compute.amazonaws.com"
          #REMOTE_USER: "ec2-user"
          #TARGET: "/home/ec2-user/"
      - name: Initialize the directory on ec2
        run: |
          # java and javac must be executable from the command line
          # update and get required packages
          sudo apt-get update
          sudo apt-get install pkg-config sqlite3 libsqlite3-dev iptables
          # download, compile, and install proj needed to process XODR files
          git init
          cd /tmp
          wget https://download.osgeo.org/proj/proj-6.1.1.tar.gz
          tar -xzf proj-6.1.1.tar.gz
          mv proj-6.1.1 proj
          cd proj
          ./configure
          make
          sudo make install
          rm -rf proj
          rm -f proj-6.1.1.tar.gz
          # get Apache Tomcat
          cd /tmp
          wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.34/bin/apache-tomcat-9.0.34.tar.gz
          tar -xzf apache-tomcat-9.0.34.tar.gz
          mv apache-tomcat-9.0.34 tomcat
          rm -rf tomcat/webapps/ROOT
          rm -rf tomcat/webapps/docs
          rm -rf tomcat/webapps/examples
          rm -rf tomcat/webapps/host-manager
          rm -rf tomcat/webapps/manager
          rm -f apache-tomcat-9.0.34.tar.gz

          # get source code and compile
          git clone https://github.com/usdot-fhwa-stol/carma-cloud.git carma-cloud
          mkdir -p tomcat/webapps/carmacloud/ROOT/WEB-INF/classes
          find ./carma-cloud/src -name "*.java" > sources.txt
          javac -cp "tomcat/lib/servlet-api.jar:carma-cloud/lib/*" -d tomcat/webapps/carmacloud/ROOT/WEB-INF/classes @sources.txt
          rm -f sources.txt

          # configure webapp
          chmod 755 carma-cloud/*.sh
          mv carma-cloud/iptables.sh tomcat
          mv carma-cloud/end_cc.sh tomcat
          mv carma-cloud/start_cc.sh tomcat
          mkdir -p tomcat/work/carmacloud/xodr
          mkdir -p tomcat/work/carmacloud/validate/xodr
          mv carma-cloud/web/WEB-INF/web.xml tomcat/webapps/carmacloud/ROOT/WEB-INF/
          mv carma-cloud/web/WEB-INF/log4j2.properties tomcat/webapps/carmacloud/ROOT/WEB-INF/classes/
          mv -n carma-cloud/web/* tomcat/webapps/carmacloud/ROOT/
          sudo mv carma-cloud/lib/libcs2cswrapper.so /usr/lib/
          mv carma-cloud/lib tomcat/webapps/carmacloud/ROOT/WEB-INF/
          touch tomcat/webapps/carmacloud/event.csv
          mv carma-cloud/osmbin/rop.csv tomcat/webapps/carmacloud/
          mv carma-cloud/osmbin/storm.csv tomcat/webapps/carmacloud/
          mv carma-cloud/osmbin/units.csv tomcat/webapps/carmacloud/
          gunzip carma-cloud/osmbin/*.gz
          mv carma-cloud/osmbin tomcat/webapps/carmacloud/
          java -cp tomcat/webapps/carmacloud/ROOT/WEB-INF/classes/:tomcat/lib/servlet-api.jar cc.ws.UserMgr ccadmin admin_testpw > tomcat/webapps/carmacloud/user.csv
          rm -rf carma-cloud

          # configure network and set privileges
          sed -i '/<\/Engine>/ i \ \ \ \ \  <Host name="carmacloud" appBase="webapps/carmacloud" unpackWARs="false" autoDeploy="false">\n      </Host>' tomcat/conf/server.xml 
          echo -e '127.0.0.1\tcarmacloud' | sudo tee -a /etc/hosts
          sudo groupadd tomcat
          sudo useradd -g tomcat -m tomcat
          chmod g+r tomcat/conf/*
          chmod -R o-rwx tomcat/webapps/*
          sudo chown -R root:tomcat tomcat
          sudo chown -R tomcat:tomcat tomcat/logs
          sudo chown -R tomcat:tomcat tomcat/temp
          sudo chown -R tomcat:tomcat tomcat/work
          sudo mv tomcat /opt/

          # the iptables script is needed to redirect ports 80 and 443 to 8080 and 8443
          # and is only necessary to execute once when the machine is restarted
          # sudo /opt/tomcat/iptables.sh

          # these commands are needed when the v2xhub is using SSH tunneling
          # echo -e '127.0.0.1\ttcmreplyhost' | sudo tee -a /etc/hosts
          # sudo groupadd v2xhub
          # sudo useradd -g v2xhub -m v2xhub

          # start tomcat using /opt/tomcat/start_cc.sh
          # stop tomcat using /opt/tomcat/end_cc.sh
 
          
